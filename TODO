[ ] Move this to Trello

[x] Write unit tests using Jasmine
	http://jasmine.github.io/

[x] Investigate Travis for automated testing, as suggested here: http://howtonode.org/http-mock-testing
	https://travis-ci.org/

	http://relistan.com/coffeescript-testing-on-travis-ci/

[x] Made decision to keep each topic stream separate (combining results at the very end) - so continuing with:
	[x] Filter by score
	[x] Redundancy check (persistent storage? https://github.com/simonlast/node-persist)

	Heroku's read-only filesystem: https://devcenter.heroku.com/articles/read-only-filesystem

[ ] Put code in a loop
	[ ] Figure out how to call API 'responsibly' (rate limiting/how often should I poll?)
	[ ] Figure out how to monitor this loop
	[ ] Safely stop the loop when desired
			http://stackoverflow.com/questions/14372288/how-to-properly-handle-sigint-with-express-js
	
	http://mcavage.me/node-restify/#client-api ?
	http://nodejs.org/api/timers.html#timers_setinterval_callback_delay_arg ?
	http://techoctave.com/c7/posts/60-simple-long-polling-example-with-javascript-and-jquery ?
	SetInterval vs SetTimeout (awesome post) http://stackoverflow.com/a/731625

[ ] Hook up mobile notifications with Instapush
	https://instapush.im/

[ ] Documentation generator
	http://jashkenas.github.io/docco/

[ ] Figure out how I want to log in production
	Loggly (https://www.loggly.com/) + Winston (http://docs.nodejitsu.com/articles/intermediate/how-to-log) ?
	http://leanstack.io/log-management

[ ] What should happen when exceptions are thrown? Currently, exceptions seem to corrupt the state of persistent storage

[~] Look into automating tasks for building/testing/deploying, like Grunt (http://leanstack.io/javascript-build-tools)

	http://nickdesaulniers.github.io/blog/2013/08/28/making-great-node-dot-js-modules-with-coffeescript/

	http://gruntjs.com/getting-started

	package.json cheat sheet: http://browsenpm.org/package.json
